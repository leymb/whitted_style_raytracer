head     1.232976;
access   ;
symbols  ;
locks    ;comment  @@;


1.232976
date     2021.01.27.16.59.27;  author p4;  state Exp;
branches ;
next     1.231695;

1.231695
date     2021.01.25.11.43.34;  author p4;  state Exp;
branches ;
next     1.231282;

1.231282
date     2021.01.22.16.35.13;  author p4;  state Exp;
branches ;
next     ;


desc
@@


1.232976
log
@@
text
@#include "precomp.h"


scene::scene()
{
	
}

scene::~scene()
{
	delete [] &m_prPrimitives;
	delete [] &m_lsLightSources;
}

void scene::AddPrimitive(primitive& aPrimitive)
{
	
	m_iPrimitiveCounter += 1;
	
	if (m_prPrimitives[m_iPrimitiveCounter] == nullptr)
	{
		
		m_prPrimitives[m_iPrimitiveCounter] = &aPrimitive;
		
	} else
	{
		AddPrimitive(aPrimitive);
	}
	
}

intersectionData scene::GetIntersection(ray& aRay)
{
	intersectionData isdTempData{};
	
	for (int i = 0; i < m_iPrimitiveCounter; i++)
	{
		const float fTempDistance = aRay.m_fDistance;
		m_prPrimitives[i]->RayIntersection(aRay, isdTempData);
		
		if ((isdTempData.m_bIntersectionDetected)
			&& (aRay.m_fDistance < fTempDistance))
		{

			aRay.m_iNearestPrimitiveIndex = i;

		}
	}

	return isdTempData;
}
@


1.231695
log
@@
text
@d11 2
a12 2
	delete[] m_prPrimitives;
	delete[] m_lsLightSources;
d32 1
a32 1
intersectionData& scene::GetIntersection(ray& aRay)
@


1.231282
log
@@
text
@d12 1
d32 1
a32 1
intersectionData& scene::GetIntersection(ray aRay)
d38 1
d40 8
@
